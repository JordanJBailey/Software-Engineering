package nz.ac.aut.ense701.gui;

import java.awt.Component;
import java.awt.GridLayout;
import javax.swing.JOptionPane;
import nz.ac.aut.ense701.gameModel.Game;
import nz.ac.aut.ense701.gameModel.GameEventListener;
import nz.ac.aut.ense701.gameModel.GameState;
import nz.ac.aut.ense701.gameModel.MoveDirection;

/*
 * User interface form for Kiwi Island.
 * 
 * @author AS
 * @version July 2011
 */

public class Inventory 
    extends javax.swing.JFrame 
    implements GameEventListener
{

    /**
     * Creates a GUI for the KiwiIsland game.
     * @param game the game object to represent with this GUI.
     */
    public Inventory(Game game) 
    {
        assert game != null : "Make sure game object is created before UI";
        this.game = game;
        setAsGameListener();
        initComponents();
        update();
        
    }
    
    /**
     * This method is called by the game model every time something changes.
     */
    @Override
    public void gameStateChanged()
    {
        update();   
    }
    private void setAsGameListener()
    {
       game.addGameEventListener(this); 
    }
     
    /**
     * Updates the state of the UI based on the state of the game.
     */
    private void update()
    {
        
        // update player information
        int[] playerValues = game.getPlayerValues();
     
        //Update Kiwi and Predator information
      
        // update inventory list
        listInventory.setListData(game.getPlayerInventory());
        listInventory.clearSelection();
        listInventory.setToolTipText(null);
        btnUse.setEnabled(false);
        btnDrop.setEnabled(false);
        
        
        
        // update movement buttons
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Inventory = new javax.swing.JPanel();
        javax.swing.JScrollPane scrlInventory = new javax.swing.JScrollPane();
        listInventory = new javax.swing.JList();
        btnUse = new javax.swing.JButton();
        btnDrop = new javax.swing.JButton();
        InventoryImg = new javax.swing.JLabel();
        Back = new javax.swing.JButton();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pest Quest");
        setMinimumSize(new java.awt.Dimension(237, 469));
        getContentPane().setLayout(null);

        Inventory.setLayout(null);

        listInventory.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listInventory.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listInventory.setVisibleRowCount(3);
        listInventory.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listInventoryValueChanged(evt);
            }
        });
        scrlInventory.setViewportView(listInventory);

        Inventory.add(scrlInventory);
        scrlInventory.setBounds(300, 170, 240, 210);

        btnUse.setText("Use");
        btnUse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUseActionPerformed(evt);
            }
        });
        Inventory.add(btnUse);
        btnUse.setBounds(300, 400, 120, 40);

        btnDrop.setText("Drop");
        btnDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDropActionPerformed(evt);
            }
        });
        Inventory.add(btnDrop);
        btnDrop.setBounds(440, 400, 110, 40);

        InventoryImg.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        InventoryImg.setIcon(new javax.swing.ImageIcon("C:\\Users\\Liam Maddren\\Documents\\kiwiIslandTest\\FINAL\\KiwiIsland\\KiwiIsland\\res\\textures\\Inventory.png")); // NOI18N
        Inventory.add(InventoryImg);
        InventoryImg.setBounds(240, 10, 380, 110);

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        Inventory.add(Back);
        Back.setBounds(300, 480, 240, 40);

        Background.setIcon(new javax.swing.ImageIcon("C:\\Users\\Liam Maddren\\Documents\\kiwiIslandTest\\FINAL\\KiwiIsland\\KiwiIsland\\res\\textures\\Game background.png")); // NOI18N
        Background.setPreferredSize(new java.awt.Dimension(836, 638));
        Inventory.add(Background);
        Background.setBounds(10, -40, 800, 680);

        getContentPane().add(Inventory);
        Inventory.setBounds(0, 0, 800, 640);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        final KiwiCountUI  gui  = new KiwiCountUI(game);
                
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            @Override
            public void run() 
            {
                gui.setVisible(true);
                gui.setLocationRelativeTo(null);
            }
        });
        this.setVisible(false);
    
    }//GEN-LAST:event_BackActionPerformed

    private void btnDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDropActionPerformed
        game.dropItem(listInventory.getSelectedValue());
    }//GEN-LAST:event_btnDropActionPerformed

    private void btnUseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUseActionPerformed
        game.useItem( listInventory.getSelectedValue());
    }//GEN-LAST:event_btnUseActionPerformed

    private void listInventoryValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listInventoryValueChanged
        Object item =  listInventory.getSelectedValue();
        btnDrop.setEnabled(true);
        if ( item != null )
        {
            btnUse.setEnabled(game.canUse(item));
            listInventory.setToolTipText(game.getOccupantDescription(item));
        }
    }//GEN-LAST:event_listInventoryValueChanged
    
    /**
     * Creates and initialises the island grid.
     */
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JLabel Background;
    private javax.swing.JPanel Inventory;
    private javax.swing.JLabel InventoryImg;
    private javax.swing.JButton btnDrop;
    private javax.swing.JButton btnUse;
    private javax.swing.JList listInventory;
    // End of variables declaration//GEN-END:variables

    private Game game;
}
